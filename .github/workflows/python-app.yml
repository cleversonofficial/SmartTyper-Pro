name: SmartTyper Pro CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Setup Xvfb for GUI testing
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
    
    - name: Test with pytest
      run: |
        export DISPLAY=:99
        xvfb-run -a pytest tests/ --cov=SmartTyper_Pro --cov-report=xml
      env:
        DISPLAY: :99
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  build:
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build executable
      run: |
        pyinstaller --onefile --windowed --name="SmartTyper_Pro" SmartTyper_Pro.py
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: SmartTyper_Pro-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist/

  release:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          ## ðŸš€ SmartTyper Pro v${{ github.run_number }}
          
          ### âœ¨ Novidades
          - Melhorias na interface
          - CorreÃ§Ãµes de bugs
          - Novos templates
          
          ### ðŸ“¦ Downloads
          - Windows: SmartTyper_Pro.exe
          - Linux: SmartTyper_Pro
          - macOS: SmartTyper_Pro
          
          ### ðŸ“– DocumentaÃ§Ã£o
          - [Guia de InstalaÃ§Ã£o](docs/INSTALLATION.md)
          - [Guia de Uso](docs/USAGE.md)
          
          **Desenvolvido por CleverDev Solutions** ðŸš€
        draft: false
        prerelease: false
